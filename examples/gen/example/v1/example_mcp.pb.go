// Code generated by protoc-gen-go-mcp. DO NOT EDIT.
// versions:
// - protoc-gen-go-mcp v0.0.1
// - protoc             v5.29.3

package examplev1

import (
	context "context"
	mcp "github.com/mark3labs/mcp-go/mcp"
	server "github.com/mark3labs/mcp-go/server"
)

type vibeServiceMCPServer struct {
	VibeServiceClient

	MCPServer *server.MCPServer
}

func (s *vibeServiceMCPServer) SetVibeHandler(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {
	// TODO: Implement the handler for SetVibe
	return nil, nil
}
func (s *vibeServiceMCPServer) SetVibeTool() *mcp.Tool {
	// TODO: Implement the tool generator for SetVibe
	tool := mcp.NewTool("examples.v1.VibeService.SetVibe", mcp.WithDescription("TODO: Implement the tool description"))
	return tool
}
func (s *vibeServiceMCPServer) GetVibeHandler(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {
	// TODO: Implement the handler for GetVibe
	return nil, nil
}
func (s *vibeServiceMCPServer) GetVibeTool() *mcp.Tool {
	// TODO: Implement the tool generator for GetVibe
	tool := mcp.NewTool("examples.v1.VibeService.GetVibe", mcp.WithDescription("TODO: Implement the tool description"))
	return tool
}
