name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
# on:
#   push:
#     tags:
#       - 'v*'
#   workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write 

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.24'
          cache: true

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_EXPERIMENTAL: 1

  build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        arch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.24'
          cache: true

      - name: Build
        run: |
          GOOS=${{ matrix.os == 'ubuntu' && 'linux' || matrix.os == 'macos' && 'darwin' || 'windows' }} \
          GOARCH=${{ matrix.arch }} \
          go build -v -o protoc-gen-go-mcp${{ matrix.os == 'windows' && '.exe' || '' }} ./cmd/protoc-gen-go-mcp

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: protoc-gen-go-mcp-${{ matrix.os }}-${{ matrix.arch }}
          path: protoc-gen-go-mcp${{ matrix.os == 'windows' && '.exe' || '' }}
          if-no-files-found: error