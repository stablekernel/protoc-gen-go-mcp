package main

import (
	"google.golang.org/protobuf/compiler/protogen"
)

// generateFile generates a _grpc.pb.go file containing gRPC service definitions.
func generateFile(gen *protogen.Plugin, file *protogen.File) *protogen.GeneratedFile {
	if len(file.Services) == 0 {
		return nil
	}
	filename := file.GeneratedFilenamePrefix + "_grpc.pb.go"
	print(filename)
	//g := gen.NewGeneratedFile(filename, file.GoImportPath)
	//// Attach all comments associated with the syntax field.
	//genLeadingComments(g, file.Desc.SourceLocations().ByPath(protoreflect.SourcePath{fileDescriptorProtoSyntaxFieldNumber}))
	//g.P("// Code generated by protoc-gen-go-grpc. DO NOT EDIT.")
	//g.P("// versions:")
	//g.P("// - protoc-gen-go-grpc v", version)
	//g.P("// - protoc             ", protocVersion(gen))
	//if file.Proto.GetOptions().GetDeprecated() {
	//	g.P("// ", file.Desc.Path(), " is a deprecated file.")
	//} else {
	//	g.P("// source: ", file.Desc.Path())
	//}
	//g.P()
	//// Attach all comments associated with the package field.
	//genLeadingComments(g, file.Desc.SourceLocations().ByPath(protoreflect.SourcePath{fileDescriptorProtoPackageFieldNumber}))
	//g.P("package ", file.GoPackageName)
	//g.P()
	//generateFileContent(gen, file, g)
	return nil
}
